<?xml version="1.0" encoding="UTF-8" ?>
<class name="VisualInstance" inherits="Spatial" version="3.4">
	<brief_description>
		Parent of all visual 3D nodes.
	</brief_description>
	<description>
		The [VisualInstance] is used to connect a resource to a visual representation. All visual 3D nodes inherit from the [VisualInstance]. In general, you should not access the [VisualInstance] properties directly as they are accessed and managed by the nodes that inherit from [VisualInstance]. [VisualInstance] is the node representation of the [VisualServer] instance.
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="get_aabb" qualifiers="const">
			<return type="AABB">
			</return>
			<description>
				Returns the [AABB] (also known as the bounding box) for this [VisualInstance]. See also [method get_transformed_aabb].
			</description>
		</method>
		<method name="get_base" qualifiers="const">
			<return type="RID">
			</return>
			<description>
				Returns the RID of the resource associated with this [VisualInstance]. For example, if the Node is a [MeshInstance], this will return the RID of the associated [Mesh].
			</description>
		</method>
		<method name="get_instance" qualifiers="const">
			<return type="RID">
			</return>
			<description>
				Returns the RID of this instance. This RID is the same as the RID returned by [method VisualServer.instance_create]. This RID is needed if you want to call [VisualServer] functions directly on this [VisualInstance].
			</description>
		</method>
		<method name="get_layer_mask_bit" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="layer" type="int">
			</argument>
			<description>
				Returns [code]true[/code] when the specified layer is enabled in [member layers] and [code]false[/code] otherwise.
			</description>
		</method>
		<method name="get_transformed_aabb" qualifiers="const">
			<return type="AABB">
			</return>
			<description>
				Returns the transformed [AABB] (also known as the bounding box) for this [VisualInstance].
				Transformed in this case means the [AABB] plus the position, rotation, and scale of the [Spatial]'s [Transform]. See also [method get_aabb].
			</description>
		</method>
		<method name="set_base">
			<return type="void">
			</return>
			<argument index="0" name="base" type="RID">
			</argument>
			<description>
				Sets the resource that is instantiated by this [VisualInstance], which changes how the engine handles the [VisualInstance] under the hood. Equivalent to [method VisualServer.instance_set_base].
			</description>
		</method>
		<method name="set_layer_mask_bit">
			<return type="void">
			</return>
			<argument index="0" name="layer" type="int">
			</argument>
			<argument index="1" name="enabled" type="bool">
			</argument>
			<description>
				Enables a particular layer in [member layers].
			</description>
		</method>
	</methods>
	<members>
		<member name="culling_portal_mode" type="int" setter="set_culling_portal_mode" getter="get_culling_portal_mode" enum="VisualInstance.PortalMode" default="0">
			When using rooms and portals, you can specify how the [VisualInstance] operates when the portal culling is active.
		</member>
		<member name="layers" type="int" setter="set_layer_mask" getter="get_layer_mask" default="1">
			The render layer(s) this [VisualInstance] is drawn on.
			This object will only be visible for [Camera]s whose cull mask includes the render object this [VisualInstance] is set to.
		</member>
	</members>
	<constants>
		<constant name="PORTAL_MODE_STATIC" value="0" enum="PortalMode">
			Use for instances within rooms that will not move - e.g. walls, floors.
			Note that if you delete a [code]PORTAL_MODE_STATIC[/code] instance while the room graph is loaded (converted), it will unload the room graph and deactivate portal culling. You will need to run reconvert the rooms using the [RoomManager].
		</constant>
		<constant name="PORTAL_MODE_DYNAMIC" value="1" enum="PortalMode">
			Use for instances within rooms that will move but not change room - e.g. moving platforms.
			Note that if you delete a [code]PORTAL_MODE_DYNAMIC[/code] instance while the room graph is loaded (converted), it will unload the room graph and deactivate portal culling. You will need to run reconvert the rooms using the [RoomManager].
		</constant>
		<constant name="PORTAL_MODE_ROAMING" value="2" enum="PortalMode">
			Use for instances that will move between rooms - e.g. players.
		</constant>
		<constant name="PORTAL_MODE_GLOBAL" value="3" enum="PortalMode">
			Use for instances that will be frustum culled only - e.g. first person weapon, debug.
		</constant>
		<constant name="PORTAL_MODE_IGNORE" value="4" enum="PortalMode">
			Use for instances that will not be shown at all - e.g. room bounds.
		</constant>
	</constants>
</class>
